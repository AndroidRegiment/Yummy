plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

android {
    compileSdk rootProject.COMPILE_SDK

    defaultConfig {
        applicationId "com.flexcode.yummy"
        minSdk rootProject.MIN_SDK
        targetSdk rootProject.TARGET_SDK
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    // Support Libraries
    implementation "androidx.core:core-ktx:$androidx_ktx"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_compose"

    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "com.google.accompanist:accompanist-flowlayout:$flow_layout"
    implementation "androidx.paging:paging-compose:$paging_compose"
    implementation "com.google.accompanist:accompanist-swiperefresh:$swipe_refresh"

    // Navigation
    ksp "io.github.raamcosta.compose-destinations:ksp:$navigation_compose"
    implementation "io.github.raamcosta.compose-destinations:core:$navigation_compose"

    // Coil
    implementation "io.coil-kt:coil-compose:$coil_compose"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"

    //Timber logging
    implementation "com.jakewharton.timber:timber:$timber"

    //shimmer
    implementation "com.facebook.shimmer:shimmer:$shimmer"

    // Testing
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    androidTestImplementation "junit:junit:$junit"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_test"
    androidTestImplementation "com.google.truth:truth:$google_truth"
    androidTestImplementation "androidx.test:core-ktx:$androidx_ktx_test"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_mockwebserver"
    testImplementation "org.mockito:mockito-android:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_test"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_test"
}